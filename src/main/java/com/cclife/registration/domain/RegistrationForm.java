/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.cclife.registration.domain;

/**
 *
 * @author CH1CHOO1
 */
import ws.cccm.application.model.*;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Set;
import java.util.logging.Level;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Temporal;
import javax.validation.constraints.NotNull;
import org.apache.log4j.Logger;
import org.springframework.binding.message.MessageBuilder;
import org.springframework.binding.message.MessageContext;
import org.springframework.binding.validation.ValidationContext;
import ws.cccm.application.util.DateUtil;
import ws.cccm.application.util.InternetUtil;
import ws.cccm.registration.utils.RegistrationUtil;

/**
 * Object mapping for hibernate-handled table: registrationdata.
 *
 * @author autogenerated
 */
@Entity
public class RegistrationForm extends BaseObject {

    private static final Logger logger = Logger.getLogger(RegistrationForm.class);
    /**
     * Serial Version UID.
     */
    private static final long serialVersionUID = -558954559L;

    private Long id;
    private Long formID;

    private Family address = new Family();
    private ArrayList<Person> registrants = new ArrayList<Person>();
    private Long churchID;
    private String churchName;
    private String churchCity;
    private String churchState;
    private String coordinator;
    private String firstName;
    private String lastName;
    private String chineseName;
    private String birthDayOfMonth;
    private String birthMonth;
    private String age;
    private String gender;
    private String relationship;
    private Boolean seeker;
    private String status;
    private String homeStreetAddress;
    private String homeCity;
    private String homeState;
    private String homeZipCode;
    private String homeCountry;
    private String homePhone;
    private String email;
    private String emailConfirm;
    private String language;
    private Faith faith;
    private Integer faithYear;
    private String cellPhone;
    private Boolean Lodging1;
    private Boolean Lodging2;
    private Boolean Lodging3;
    private Boolean Lodging4;
    private Integer breakfast1;
    private Integer breakfast2;
    private Integer breakfast3;
    private Integer breakfast4;
    private Integer breakfast5;
    private Integer lunch1;
    private Integer lunch2;
    private Integer lunch3;
    private Integer lunch4;
    private Integer lunch5;
    private Integer dinner1;
    private Integer dinner2;
    private Integer dinner3;
    private Integer dinner4;
    private Integer dinner5;
    private Date registrationDate;
    private String Remarks;
    private Boolean Misc1;
    private Boolean Misc2;
    private Boolean NameTag;
    private String GroupName;
    private Boolean CheckIn;
    private Set<Serve> volunteerJobs;
//    private List registrants =
//            LazyList.decorate(
//            new ArrayList(),
//            FactoryUtils.instantiateFactory(Person.class));

    private PaymentMethod paymentMethod;
    private String subsidyAmount;
    private String payAmount;
    private Integer breakfastTotal;
    private Integer lunchTotal;
    private Integer dinnerTotal;
    private Integer adultTotal;
    private Integer childrenTotal;
    private Integer babyTotal;
    private Integer totalAdultRegistrationFee;
    private Integer totalChildrenRegistrationFee;
    private Integer totalRegistrationFee;
    private Integer totalBreakfastFee;
    private Integer totalLunchFee;
    private Integer totalDinnerFee;
    private Integer totalMealsFee;
    private Integer grandTotal;
    private Integer adultRegistrationFee;
    private Integer nonAdultRegistrationFee;
    // Retreat
    private Integer totalMeal1Fee;
    private Integer totalMeal2Fee;
    private Integer totalMeal3Fee;
    private Integer totalMeal4Fee;
    private Integer totalLodging1Fee;
    private Integer totalLodging2Fee;
    private Integer totalLodgingFee;
//    private Set<Seminar> seminars;
//    private Set<Seminar> seminars2;
//    private Set<Seminar> seminars3;
//    private Set<Seminar> seminars4;
//    private Set<Seminar> seminars5;
//    private Set<Seminar> seminars6;

    private List<LabelValue> ageGroup;
    private String discountCode;
    private Integer eventID;
    private List<LabelValue> months;
    private List<LabelValue> dayOfMonth;
    private List<LabelValue> relationshipGroup;
    private List<LabelValue> statusGroup;
    private List<LabelValue> statusGroup2;
    private List<LabelValue> stateList;
    private Fee expense;

    /**
     * Default constructor, mainly for hibernate use.
     */
    public RegistrationForm() {
        // Default constructor
    }

    public void initialize() {

        logger.debug("Initialize Form...");

        try {
            registrationDate = DateUtil.getToday().getTime();
        } catch (ParseException ex) {
            java.util.logging.Logger.getLogger(RegistrationForm.class.getName()).log(Level.SEVERE, null, ex);
        }

        logger.debug("Exit initialize Form...");
    }

    public void validateStart(ValidationContext context) {
        logger.debug("Validate start state...");

        MessageContext messages = context.getMessageContext();
        if (this.getChurchID() <= 0L) {
            messages.addMessage(new MessageBuilder().error().source("churchID").
                    defaultText("Church information is required").build());
        }

        logger.debug("Exit start state...");
    }

//    public void validateRegistrationGrace(ValidationContext context) {
//
//        logger.debug("Validate main state...");
//
//        MessageContext messages = context.getMessageContext();
//
//        if (homeStreetAddress.isEmpty()) {
//            messages.addMessage(new MessageBuilder().error().source("homeStreetAddress").
//                    defaultText("Street name is required").build());
//        } else if (homeCity.isEmpty()) {
//            messages.addMessage(new MessageBuilder().error().source("homeCity").
//                    defaultText("City is required").build());
//        } else if (homeState.isEmpty()) {
//            messages.addMessage(new MessageBuilder().error().source("homeState").
//                    defaultText("State is required").build());
//        } else if (homeZipCode.isEmpty()) {
//            messages.addMessage(new MessageBuilder().error().source("homeZipCode").
//                    defaultText("Zipcode is required").build());
//        } else if (homePhone.isEmpty()) {
//            messages.addMessage(new MessageBuilder().error().source("homePhone").
//                    defaultText("Phone is required").build());
//        } else if (email.isEmpty()) {
//            messages.addMessage(new MessageBuilder().error().source("email").
//                    defaultText("Your email is required").build());
//        } else if (!InternetUtil.isValidEmailAddress(email)) {
//            messages.addMessage(new MessageBuilder().error().source("email").
//                    defaultText("You have enter invalid email").build());
//        } else if (emailConfirm != null && emailConfirm.isEmpty()) {
//            messages.addMessage(new MessageBuilder().error().source("emailConfirm").
//                    defaultText("Please reenter email for confirmation").build());
//        } else if (!email.equalsIgnoreCase(emailConfirm)) {
//            messages.addMessage(new MessageBuilder().error().source("emailConfirm").
//                    defaultText("The emails you entered do not match").build());
//        }
//
//        int rowCount = 0;
//
//        if (verifyRegistrationTableVariable2(messages, this.getFirstName(), this.getLastName(), this.getGender(), this.getAge(), this.getStatus(), this.getLanguage(), this.getEmail1(), 1)) {
//            rowCount++;
//        }
//
//        if (verifyRegistrationTableVariable2(messages, this.getFirstName2(), this.getLastName2(), this.getGender2(), this.getAge2(), this.getStatus2(), this.getLanguage2(), this.getEmail2(), 2)) {
//            rowCount++;
//        }
//
//        if (verifyRegistrationTableVariable2(messages, this.getFirstName3(), this.getLastName3(), this.getGender3(), this.getAge3(), this.getStatus3(), this.getLanguage3(), this.getEmail3(), 3)) {
//            rowCount++;
//        }
//
//        if (verifyRegistrationTableVariable2(messages, this.getFirstName4(), this.getLastName4(), this.getGender4(), this.getAge4(), this.getStatus4(), this.getLanguage4(), this.getEmail4(), 4)) {
//            rowCount++;
//        }
//
//        if (verifyRegistrationTableVariable2(messages, this.getFirstName5(), this.getLastName5(), this.getGender5(), this.getAge5(), this.getStatus5(), this.getLanguage5(), this.getEmail5(), 5)) {
//            rowCount++;
//        }
//
//        if (verifyRegistrationTableVariable2(messages, this.getFirstName6(), this.getLastName6(), this.getGender6(), this.getAge6(), this.getStatus6(), this.getLanguage6(), this.getEmail6(), 6)) {
//            rowCount++;
//        }
//
//        if (rowCount == 0) {
//            messages.addMessage(new MessageBuilder().error().source("firstName").
//                    defaultText("Registration information is not filled").build());
//        }
//
//    }
//    public void validateMain(ValidationContext context) {
//
//        logger.debug("Validate main state...");
//
//        MessageContext messages = context.getMessageContext();
//
//        if (homeStreetAddress.isEmpty()) {
//            messages.addMessage(new MessageBuilder().error().source("homeStreetAddress").
//                    defaultText("Street name is required").build());
//        } else if (homeCity.isEmpty()) {
//            messages.addMessage(new MessageBuilder().error().source("homeCity").
//                    defaultText("City is required").build());
//        } else if (homeState.isEmpty()) {
//            messages.addMessage(new MessageBuilder().error().source("homeState").
//                    defaultText("State is required").build());
//        } else if (homeZipCode.isEmpty()) {
//            messages.addMessage(new MessageBuilder().error().source("homeZipCode").
//                    defaultText("Zipcode is required").build());
//        } else if (homePhone.isEmpty()) {
//            messages.addMessage(new MessageBuilder().error().source("homePhone").
//                    defaultText("Phone is required").build());
//        } else if (email.isEmpty()) {
//            messages.addMessage(new MessageBuilder().error().source("email").
//                    defaultText("Your email is required").build());
//        } else if (!InternetUtil.isValidEmailAddress(email)) {
//            messages.addMessage(new MessageBuilder().error().source("email").
//                    defaultText("You have enter invalid email").build());
//        } else if (emailConfirm != null && emailConfirm.isEmpty()) {
//            messages.addMessage(new MessageBuilder().error().source("emailConfirm").
//                    defaultText("Please reenter email for confirmation").build());
//        } else if (!email.equalsIgnoreCase(emailConfirm)) {
//            messages.addMessage(new MessageBuilder().error().source("emailConfirm").
//                    defaultText("The emails you entered do not match").build());
//        }
//
//        int rowCount = 0;
//
//        if (verifyRegistrationTableVariable1(messages, this.getFirstName(), this.getLastName(), this.getGender(), this.getAge(), this.getStatus(), this.getLanguage(), this.getFaith(), 1)) {
//            rowCount++;
//        }
//
//        if (verifyRegistrationTableVariable1(messages, this.getFirstName2(), this.getLastName2(), this.getGender2(), this.getAge2(), this.getStatus2(), this.getLanguage2(), this.getFaith2(), 2)) {
//            rowCount++;
//        }
//
//        if (verifyRegistrationTableVariable1(messages, this.getFirstName3(), this.getLastName3(), this.getGender3(), this.getAge3(), this.getStatus3(), this.getLanguage3(), this.getFaith3(), 3)) {
//            rowCount++;
//        }
//
//        if (verifyRegistrationTableVariable1(messages, this.getFirstName4(), this.getLastName4(), this.getGender4(), this.getAge4(), this.getStatus4(), this.getLanguage4(), this.getFaith4(), 4)) {
//            rowCount++;
//        }
//
//        if (verifyRegistrationTableVariable1(messages, this.getFirstName5(), this.getLastName5(), this.getGender5(), this.getAge5(), this.getStatus5(), this.getLanguage5(), this.getFaith5(), 5)) {
//            rowCount++;
//        }
//
//        if (verifyRegistrationTableVariable1(messages, this.getFirstName6(), this.getLastName6(), this.getGender6(), this.getAge6(), this.getStatus6(), this.getLanguage6(), this.getFaith6(), 6)) {
//            rowCount++;
//        }
//
//        if (rowCount == 0) {
//            messages.addMessage(new MessageBuilder().error().source("firstName").
//                    defaultText("Registration information is not filled").build());
//        }
//
//        logger.debug(
//                "Exit main state...");
//
//    }
    private boolean verifyRegistrationTableVariable1(MessageContext messages, String firstName, String lastName, String gender, String age, String status, String language, Faith faith, Integer rowNum) {

        String row = rowNum == 1 ? "" : String.valueOf(rowNum);
        logger.debug("Faith:[" + faith + "]");
        if ((firstName == null || firstName.length() <= 0)
                && (lastName == null || lastName.length() <= 0)) {
        } else {
            if (firstName != null && firstName.isEmpty()) {
                messages.addMessage(new MessageBuilder().error().source("firstName" + row).
                        defaultText("First name is required").build());
            } else if (lastName != null && lastName.isEmpty()) {
                messages.addMessage(new MessageBuilder().error().source("lastName" + row).
                        defaultText("Last name is required").build());
            } else if (gender == null || gender.isEmpty()) {
                messages.addMessage(new MessageBuilder().error().source("gender" + row).
                        defaultText("Gender is required").build());
            } else if (age != null && age.isEmpty()) {
                messages.addMessage(new MessageBuilder().error().source("age" + row).
                        defaultText("Age is required").build());
            } else if (status != null && status.isEmpty()) {
                messages.addMessage(new MessageBuilder().error().source("status" + row).
                        defaultText("Status is required").build());
            } else if (language != null && language.isEmpty()) {
                messages.addMessage(new MessageBuilder().error().source("language" + row).
                        defaultText("Please select which event you will attend").build());
            } else if (faith == null) {
                messages.addMessage(new MessageBuilder().error().source("faith" + row).
                        defaultText("Please provide your faith status").build());
            }

            // It is verified
            return true;
        }
        // Does not meet condition, it is not verified
        return false;
    }

    private boolean verifyRegistrationTableVariable2(MessageContext messages, String firstName, String lastName, String gender, String age, String status, String language, String email, Integer rowNum) {

        String row = rowNum == 1 ? "" : String.valueOf(rowNum);

        if ((firstName == null || firstName.length() <= 0)
                && (lastName == null || lastName.length() <= 0)) {
        } else {
            if (firstName != null && firstName.isEmpty()) {
                messages.addMessage(new MessageBuilder().error().source("firstName" + row).
                        defaultText("First name is required").build());
            } else if (lastName != null && lastName.isEmpty()) {
                messages.addMessage(new MessageBuilder().error().source("lastName" + row).
                        defaultText("Last name is required").build());
            } else if (gender == null || gender.isEmpty()) {
                messages.addMessage(new MessageBuilder().error().source("gender" + row).
                        defaultText("Gender is required").build());
            } else if (age != null && age.isEmpty()) {
                messages.addMessage(new MessageBuilder().error().source("age" + row).
                        defaultText("Age is required").build());
            } else if (status != null && status.isEmpty()) {
                messages.addMessage(new MessageBuilder().error().source("status" + row).
                        defaultText("Status is required").build());
            } else if (language != null && language.isEmpty()) {
                messages.addMessage(new MessageBuilder().error().source("language" + row).
                        defaultText("Please select which event you will attend").build());
            } else if (email != null && email.isEmpty() && (language != null && language.contentEquals("E"))) {
                if (row.isEmpty()) {
                    row = "1";
                }
                messages.addMessage(new MessageBuilder().error().source("email" + row).
                        defaultText("Please provide your email for GRACE communication").build());
            }

            // It is verified
            return true;
        }

        // Does not meet condition, it is not verified
        return false;
    }

    public void validateMain1(ValidationContext context) {

        logger.debug("Validate main state...");

        MessageContext messages = context.getMessageContext();

//        messages.addMessage(new MessageBuilder().error().source("username").
//                    code("account.username.required").build());
//        if ((this.getFirstName() != null && this.getFirstName().isEmpty())
//                && (this.getLastName() != null && this.getLastName().isEmpty())
//                && (this.getFirstName2() != null && this.getFirstName2().isEmpty())
//                && (this.getLastName2() != null && this.getLastName2().isEmpty())
//                && (this.getFirstName3() != null && this.getFirstName3().isEmpty())
//                && (this.getLastName3() != null && this.getLastName3().isEmpty())
//                && (this.getFirstName4() != null && this.getFirstName4().isEmpty())
//                && (this.getLastName4() != null && this.getLastName4().isEmpty())
//                && (this.getFirstName5() != null && this.getFirstName5().isEmpty())
//                && (this.getLastName5() != null && this.getLastName5().isEmpty())
//                && (this.getFirstName6() != null && this.getFirstName6().isEmpty())
//                && (this.getLastName6() != null && this.getLastName6().isEmpty())
//                ) {
//            messages.addMessage(new MessageBuilder().error().source("personal").
//                    defaultText("Registration personal information is not filled").build());
//        } else {
//
//            if ((this.getFirstName() != null && this.getFirstName().length() > 0)
//                    && (this.getLastName() != null && this.getLastName().length() > 0)
//                    && ((this.getAge() != null && this.getAge().isEmpty())
//                    || (this.getGender() != null && this.getGender().isEmpty())
//                    || (this.getStatus() != null && this.getStatus().isEmpty()))) {
//                messages.addMessage(new MessageBuilder().error().source("firstName").
//                        defaultText("Personal information is not completed").build());
//            }
//            if ((this.getFirstName2() != null && this.getFirstName2().length() > 0)
//                    && (this.getLastName2() != null && this.getLastName2().length() > 0)
//                    && ((this.getAge2() != null && this.getAge2().isEmpty())
//                    || (this.getGender2() != null && this.getGender2().isEmpty())
//                    || (this.getStatus2() != null && this.getStatus2().isEmpty()))) {
//                messages.addMessage(new MessageBuilder().error().source("firstName2").
//                        defaultText("Personal information row 2 is not completed").build());
//            }
//
//            if ((this.getFirstName3() != null && this.getFirstName3().length() > 0)
//                    && (this.getLastName3() != null && this.getLastName3().length() > 0)
//                    && ((this.getAge3() != null && this.getAge3().isEmpty())
//                    || (this.getGender3() != null && this.getGender3().isEmpty())
//                    || (this.getStatus3() != null && this.getStatus3().isEmpty()))) {
//                messages.addMessage(new MessageBuilder().error().source("firstName3").
//                        defaultText("Personal information row 3 is not completed").build());
//            }
//
//            if ((this.getFirstName4() != null && this.getFirstName4().length() > 0)
//                    && (this.getLastName4() != null && this.getLastName4().length() > 0)
//                    && ((this.getAge4() != null && this.getAge4().isEmpty())
//                    || (this.getGender4() != null && this.getGender4().isEmpty())
//                    || (this.getStatus4() != null && this.getStatus4().isEmpty()))) {
//                messages.addMessage(new MessageBuilder().error().source("firstName4").
//                        defaultText("Personal information row 4 is not completed").build());
//            }
//
//            if ((this.getFirstName5() != null && this.getFirstName5().length() > 0)
//                    && (this.getLastName5() != null && this.getLastName5().length() > 0)
//                    && ((this.getAge5() != null && this.getAge5().isEmpty())
//                    || (this.getGender5() != null && this.getGender5().isEmpty())
//                    || (this.getStatus5() != null && this.getStatus5().isEmpty()))) {
//                messages.addMessage(new MessageBuilder().error().source("firstName5").
//                        defaultText("Personal information row 5 is not completed").build());
//            }
//
//            if ((this.getFirstName6() != null && this.getFirstName6().length() > 0)
//                    && (this.getLastName6() != null && this.getLastName6().length() > 0)
//                    && ((this.getAge6() != null && this.getAge6().isEmpty())
//                    || (this.getGender6() != null && this.getGender6().isEmpty())
//                    || (this.getStatus6() != null && this.getStatus6().isEmpty()))) {
//                messages.addMessage(new MessageBuilder().error().source("firstName6").
//                        defaultText("Personal information row 6 is not completed").build());
//            }
//        }
        if (churchID.intValue() <= 0) {
            messages.addMessage(new MessageBuilder().error().source("churchID").
                    defaultText("Church is required").build());
        } else if (chineseName != null && chineseName.isEmpty()) {
            messages.addMessage(new MessageBuilder().error().source("chineseName").
                    defaultText("Your Chinese name is required").build());
        } else if (firstName.isEmpty()) {
            messages.addMessage(new MessageBuilder().error().source("firstName").
                    defaultText("Your first name is required").build());
        } else if (lastName.isEmpty()) {
            messages.addMessage(new MessageBuilder().error().source("lastName").
                    defaultText("Your last name is required").build());
        } else if (faith == Faith.BELIEVER && faithYear == null) {
            messages.addMessage(new MessageBuilder().error().source("faithYear").
                    defaultText("Your faith year is required").build());
        } else if (faith == Faith.BELIEVER && (faithYear == null || faithYear.intValue() <= 0 || faithYear.intValue() > 100)) {
            messages.addMessage(new MessageBuilder().error().source("faithYear").
                    defaultText("Your faith year is not valid").build());
        } else if (homeStreetAddress.isEmpty()) {
            messages.addMessage(new MessageBuilder().error().source("homeStreetAddress").
                    defaultText("Your address is required").build());
        } else if (homeCity.isEmpty()) {
            messages.addMessage(new MessageBuilder().error().source("homeCity").
                    defaultText("Your city is required").build());
        } else if (homeState.isEmpty()) {
            messages.addMessage(new MessageBuilder().error().source("homeState").
                    defaultText("Your state is required").build());
        } else if (homeZipCode.isEmpty()) {
            messages.addMessage(new MessageBuilder().error().source("homeZipCode").
                    defaultText("Your zip is required").build());
        } else if (homePhone.isEmpty()) {
            messages.addMessage(new MessageBuilder().error().source("homePhone").
                    defaultText("Home Phone is required").build());
        } else if (email.isEmpty()) {
            messages.addMessage(new MessageBuilder().error().source("email").
                    defaultText("Your valid email is required").build());
        } else if (!InternetUtil.isValidEmailAddress(email)) {
            messages.addMessage(new MessageBuilder().error().source("email").
                    defaultText("You have enter invalid email").build());
        }
    }

//    public void validateConsent(ValidationContext context) {
//
//        logger.debug("Validate consent state..[" + guardianFullName + "]");
//
//        MessageContext messages = context.getMessageContext();
//
//        if (guardianFullName != null && guardianFullName.isEmpty()) {
//            messages.addMessage(new MessageBuilder().error().source("guardianFullName").
//                    defaultText("The Name of guardian is required").build());
//        }
//
//        if (guardianPhoneNumber != null && guardianPhoneNumber.isEmpty()) {
//            messages.addMessage(new MessageBuilder().error().source("guardianPhoneNumber").
//                    defaultText("The phone number is required").build());
//        } else if (guardianPhoneNumberConfirm != null && guardianPhoneNumberConfirm.isEmpty()) {
//            messages.addMessage(new MessageBuilder().error().source("guardianPhoneNumberConfirm").
//                    defaultText("Please reenter phone number for confirmation").build());
//        } else if (!guardianPhoneNumber.equalsIgnoreCase(guardianPhoneNumberConfirm)) {
//            messages.addMessage(new MessageBuilder().error().source("guardianPhoneNumberConfirm").
//                    defaultText("The phone numbers you entered do not match").build());
//        }
//
//        if (guardianEmail != null && guardianEmail.isEmpty()) {
//            messages.addMessage(new MessageBuilder().error().source("guardianEmail").
//                    defaultText("The email is required").build());
//        } else if (!InternetUtil.isValidEmailAddress(guardianEmail)) {
//            messages.addMessage(new MessageBuilder().error().source("guardianEmail").
//                    defaultText("You have enter invalid email").build());
//        } else if (guardianEmailConfirm != null && guardianEmailConfirm.isEmpty()) {
//            messages.addMessage(new MessageBuilder().error().source("guardianEmailConfirm").
//                    defaultText("Please reenter email for confirmation").build());
//        } else if (!guardianEmail.equalsIgnoreCase(guardianEmailConfirm)) {
//            messages.addMessage(new MessageBuilder().error().source("guardianEmailConfirm").
//                    defaultText("The emails you entered do not match").build());
//        }
//    }

    public void validateReview(ValidationContext context) {

        logger.debug("Validate review1 state..[" + paymentMethod + "]");

        MessageContext messages = context.getMessageContext();

        if (paymentMethod == null) {
            messages.addMessage(new MessageBuilder().error().source("paymentMethod").
                    defaultText("Please select your payment option").build());
        }
    }

    /**
     * Constructor taking a given ID.
     *
     * @param id to set
     */
    public RegistrationForm(Long id) {
        this.id = id;
    }

//    public boolean isConsentNeeded() {
//        return (age == null || age.isEmpty() || age.charAt(0) != 'A')
//                && (age2 == null || age2.isEmpty() || age2.charAt(0) != 'A')
//                && (age3 == null || age3.isEmpty() || age3.charAt(0) != 'A')
//                && (age4 == null || age4.isEmpty() || age4.charAt(0) != 'A')
//                && (age5 == null || age5.isEmpty() || age5.charAt(0) != 'A')
//                && (age6 == null || age6.isEmpty() || age6.charAt(0) != 'A');
//    }
//    public void updateFees() {
//
//        try {
////            registrationDate = DateUtil.getToday().getTime();
////            Date now = registrationDate;
////            Date regularRegistrationDate = new GregorianCalendar(2012, Calendar.OCTOBER, 31, 23, 59).getTime();
////            Date lateRegistrationDate = new GregorianCalendar(2012, Calendar.OCTOBER, 30, 23, 59).getTime();
//
////            logger.debug("Registration Date:" + now.toString());
////            logger.debug("Regular Registration Date:" + regularRegistrationDate.toString());
////            logger.debug("Late Registration Date:" + lateRegistrationDate.toString());
////             Meals Fee
//            breakfastTotal = breakfast2 + breakfast3 + breakfast4;
//            totalBreakfastFee = breakfastTotal * 5;
//
//            lunchTotal = lunch2 + lunch3 + lunch4;
//            totalLunchFee = lunchTotal * 5;
//
//            dinnerTotal = dinner1 + dinner2 + dinner3;
//            totalDinnerFee = dinnerTotal * 8;
//
//            totalMealsFee = totalBreakfastFee + totalLunchFee + totalDinnerFee;
//
//            // Registration Fee
//            adultTotal = 0;
//            childrenTotal = 0;
//            babyTotal = 0;
//
//            if (verifyEligibleAgePerRow(chineseName, firstName, lastName, age)) {
//                if (age.charAt(0) == 'A') {
//                    adultTotal = adultTotal + 1;
//                } else if (Integer.valueOf(age) >= 4) {
//                    childrenTotal = childrenTotal + 1;
//                } else {
//                    babyTotal = babyTotal + 1;
//                }
//            } else {
//                firstName = "";
//                lastName = "";
//                age = "";
//                gender = "";
//                status = "";
//            }
//
//            if (verifyEligibleAgePerRow(chineseName2, firstName2, lastName2, age2)) {
//                if (age2.charAt(0) == 'A') {
//                    adultTotal = adultTotal + 1;
//                } else if (Integer.valueOf(age2) >= 4) {
//                    childrenTotal = childrenTotal + 1;
//                } else {
//                    babyTotal = babyTotal + 1;
//                }
//            } else {
//                firstName2 = "";
//                lastName2 = "";
//                age2 = "";
//                gender2 = "";
//                status2 = "";
//            }
//
//            if (verifyEligibleAgePerRow(chineseName3, firstName3, lastName3, age3)) {
//                if (age3.charAt(0) == 'A') {
//                    adultTotal = adultTotal + 1;
//                } else if (Integer.valueOf(age3) >= 4) {
//                    childrenTotal = childrenTotal + 1;
//                } else {
//                    babyTotal = babyTotal + 1;
//                }
//            } else {
//                firstName3 = "";
//                lastName3 = "";
//                age3 = "";
//                gender3 = "";
//                status3 = "";
//            }
//
//            if (verifyEligibleAgePerRow(chineseName4, firstName4, lastName4, age4)) {
//                if (age4.charAt(0) == 'A') {
//                    adultTotal = adultTotal + 1;
//                } else if (Integer.valueOf(age4) >= 4) {
//                    childrenTotal = childrenTotal + 1;
//                } else {
//                    babyTotal = babyTotal + 1;
//                }
//            } else {
//                firstName4 = "";
//                lastName4 = "";
//                age4 = "";
//                gender4 = "";
//                status4 = "";
//            }
//
//            if (verifyEligibleAgePerRow(chineseName5, firstName5, lastName5, age5)) {
//                if (age5.charAt(0) == 'A') {
//                    adultTotal = adultTotal + 1;
//                } else if (Integer.valueOf(age5) >= 4) {
//                    childrenTotal = childrenTotal + 1;
//                } else {
//                    babyTotal = babyTotal + 1;
//                }
//            } else {
//                firstName5 = "";
//                lastName5 = "";
//                age5 = "";
//                gender5 = "";
//                status5 = "";
//            }
//
//            if (verifyEligibleAgePerRow(chineseName6, firstName6, lastName6, age6)) {
//                if (age6.charAt(0) == 'A') {
//                    adultTotal = adultTotal + 1;
//                } else if (Integer.valueOf(age6) >= 4) {
//                    childrenTotal = childrenTotal + 1;
//                } else {
//                    babyTotal = babyTotal + 1;
//                }
//            } else {
//                firstName6 = "";
//                lastName6 = "";
//                age6 = "";
//                gender6 = "";
//                status6 = "";
//            }
//
////            if (discountCode != null && discountCode.equalsIgnoreCase("cccm11")) {
////                adultRegistrationFee = 40;
////                nonAdultRegistrationFee = 20;
////            } else {
//            adultRegistrationFee = RegistrationUtil.getAdultRegistrationFee(registrationDate).intValue();
//            nonAdultRegistrationFee = RegistrationUtil.getNonAdultRegistrationFee(registrationDate).intValue();
////            }
//
//            totalAdultRegistrationFee = adultTotal * adultRegistrationFee;
//            totalChildrenRegistrationFee = childrenTotal * nonAdultRegistrationFee;
//            totalRegistrationFee = totalAdultRegistrationFee + totalChildrenRegistrationFee;
//
//            grandTotal = totalRegistrationFee + totalMealsFee;
//
//        } catch (NullPointerException ex) {
//            logger.error("updateFees Error:" + ex.getMessage());
//            ex.printStackTrace();
//        }
//    }
    private boolean verifyEligibleAgePerRow(String cn, String firstName, String lastName, String a) {

        try {
            if (((firstName.length() > 0)
                    && (lastName.length() > 0))
                    || (cn.length() > 0)) {

                if (a.isEmpty()) {
                    return false;
                }

            } else {
                return false;
            }
        } catch (NullPointerException ex) {
            return false;
        }

        return true;
    }

    /**
     * Return the value associated with the column: id.
     *
     * @return A Integer object (this.id)
     */
    @Id
    @Column(name = "RegistrationID", nullable = false)
    @GeneratedValue(strategy = GenerationType.AUTO)
    public Long getId() {
        return this.id;
    }

    /**
     * Set the value related to the column: id.
     *
     * @param id the id value you wish to set
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Return the value associated with the column: firstName.
     *
     * @return A String object (this.firstName)
     */
    @Column(length = 100)
    public String getFirstName() {
        return this.firstName;
    }

    /**
     * Set the value related to the column: firstName.
     *
     * @param firstName the firstName value you wish to set
     */
    public void setFirstName(final String FirstName) {
        this.firstName = FirstName;
    }

    /**
     * Return the value associated with the column: lastName.
     *
     * @return A String object (this.lastName)
     */
    @Column(length = 100)
    public String getLastName() {
        return this.lastName;
    }

    /**
     * Set the value related to the column: lastName.
     *
     * @param lastName the lastName value you wish to set
     */
    public void setLastName(final String LastName) {
        this.lastName = LastName;
    }

    /**
     * Return the value associated with the column: chineseName.
     *
     * @return A String object (this.chineseName)
     */
    @Column(length = 100)
    public String getChineseName() {

//        try {
//            if (log.isDebugEnabled()) {
//                log.debug("GET Chinese Name:[" + new String(this.chineseName.getBytes("UTF-8")) + "][" + this.chineseName + "]");
//            }
//        } catch (java.io.UnsupportedEncodingException uee) {
//        } catch (Exception e) {           
//        }
        return this.chineseName;
//        return new String(this.chineseName.getBytes("UTF-8"));
    }

    /**
     * Set the value related to the column: chineseName.
     *
     * @param chineseName the chineseName value you wish to set
     */
    public void setChineseName(final String ChineseName) {

//        try {
//            if (log.isDebugEnabled()) {
//                log.debug("SET Chinese Name:[" + new String(chineseName.getBytes("UTF-8")) + "][" + chineseName + "]");
//            }
//        } catch (java.io.UnsupportedEncodingException uee) {
//        } catch (Exception e) {           
//        }
        this.chineseName = ChineseName;

    }

    /**
     * Return the value associated with the column: gender.
     *
     * @return A String object (this.gender)
     */
    @Column(length = 2)
    public String getGender() {
        return this.gender;
    }

    /**
     * Set the value related to the column: gender.
     *
     * @param gender the gender value you wish to set
     */
    public void setGender(final String Gender) {
        this.gender = Gender;
    }

    /**
     * Return the value associated with the column: age.
     *
     * @return A String object (this.age)
     */
    @Column(length = 3)
    public String getAge() {
        return this.age;
    }

    /**
     * Set the value related to the column: age.
     *
     * @param age the age value you wish to set
     */
    public void setAge(final String Age) {
        this.age = Age;
    }

    /**
     * Return the value associated with the column: email.
     *
     * @return A String object (this.email)
     */
    @Column(length = 100)
    public String getEmail() {
        return this.email;
    }

    /**
     * Set the value related to the column: email.
     *
     * @param email the email value you wish to set
     */
    public void setEmail(final String Email) {
        this.email = Email;
    }

    /**
     * Return the value associated with the column: relationship.
     *
     * @return A String object (this.relationship)
     */
    @Column(length = 5)
    public String getRelationship() {
        return this.relationship;
    }

    /**
     * Set the value related to the column: relationship.
     *
     * @param relationship the relationship value you wish to set
     */
    public void setRelationship(final String Relationship) {
        this.relationship = Relationship;
    }

    /**
     * Return the value associated with the column: Remarks.
     *
     * @return A String object (this.Remarks)
     */
    @Column(length = 255)
    public String getRemarks() {
        return this.Remarks;
    }

    /**
     * Set the value related to the column: Remarks.
     *
     * @param Remarks the Remarks value you wish to set
     */
    public void setRemarks(final String Remarks) {
        this.Remarks = Remarks;
    }

    /**
     * Return the value associated with the column: seeker.
     *
     * @return A Boolean object (this.seeker)
     */
    public Boolean getSeeker() {
        return this.seeker;
    }

    /**
     * Set the value related to the column: seeker.
     *
     * @param seeker the seeker value you wish to set
     */
    public void setSeeker(final Boolean Seeker) {
        this.seeker = Seeker;
    }

    /**
     * Return the value associated with the column: status.
     *
     * @return A String object (this.status)
     */
    @Column(length = 5)
    public String getStatus() {
        return this.status;
    }

    /**
     * Set the value related to the column: status.
     *
     * @param status the status value you wish to set
     */
    public void setStatus(final String Status) {
        this.status = Status;
    }

    public String getCellPhone() {
        return cellPhone;
    }

    public void setCellPhone(String CellPhone) {
        this.cellPhone = CellPhone;
    }

    /**
     * Return the value associated with the column: breakfast1.
     *
     * @return A Integer object (this.breakfast1)
     */
    public Integer getBreakfast1() {

        if (this.breakfast1 == null) {
            this.breakfast1 = new Integer(0);
        }
        return this.breakfast1;
    }

    /**
     * Set the value related to the column: breakfast1.
     *
     * @param breakfast1 the breakfast1 value you wish to set
     */
    public void setBreakfast1(Integer Breakfast1) {
        this.breakfast1 = Breakfast1;
    }

    /**
     * Return the value associated with the column: breakfast2.
     *
     * @return A Integer object (this.breakfast2)
     */
    public Integer getBreakfast2() {

        if (this.breakfast2 == null) {
            this.breakfast2 = new Integer(0);
        }
        return this.breakfast2;
    }

    /**
     * Set the value related to the column: breakfast2.
     *
     * @param breakfast2 the breakfast2 value you wish to set
     */
    public void setBreakfast2(Integer Breakfast2) {
        this.breakfast2 = Breakfast2;
    }

    /**
     * Return the value associated with the column: breakfast3.
     *
     * @return A Integer object (this.breakfast3)
     */
    public Integer getBreakfast3() {

        if (this.breakfast3 == null) {
            this.breakfast3 = new Integer(0);
        }
        return this.breakfast3;
    }

    /**
     * Set the value related to the column: breakfast3.
     *
     * @param breakfast3 the breakfast3 value you wish to set
     */
    public void setBreakfast3(Integer Breakfast3) {
        this.breakfast3 = Breakfast3;
    }

    /**
     * Return the value associated with the column: breakfast4.
     *
     * @return A Integer object (this.breakfast4)
     */
    public Integer getBreakfast4() {

        if (this.breakfast4 == null) {
            this.breakfast4 = new Integer(0);
        }
        return this.breakfast4;
    }

    /**
     * Set the value related to the column: breakfast4.
     *
     * @param breakfast4 the breakfast4 value you wish to set
     */
    public void setBreakfast4(Integer Breakfast4) {
        this.breakfast4 = Breakfast4;
    }

    /**
     * Return the value associated with the column: breakfast5.
     *
     * @return A Integer object (this.breakfast5)
     */
    public Integer getBreakfast5() {

        if (this.breakfast5 == null) {
            this.breakfast5 = new Integer(0);
        }
        return this.breakfast5;
    }

    /**
     * Set the value related to the column: breakfast5.
     *
     * @param breakfast5 the breakfast5 value you wish to set
     */
    public void setBreakfast5(Integer Breakfast5) {
        this.breakfast5 = Breakfast5;
    }

    /**
     * Return the value associated with the column: churchCity.
     *
     * @return A String object (this.churchCity)
     */
    @Column(length = 50)
    public String getChurchCity() {
        return this.churchCity;
    }

    /**
     * Set the value related to the column: churchCity.
     *
     * @param churchCity the churchCity value you wish to set
     */
    public void setChurchCity(String ChurchCity) {
        this.churchCity = ChurchCity;
    }

    /**
     * Return the value associated with the column: churchID.
     *
     * @return A Double object (this.churchID)
     */
    public Long getChurchID() {
        return this.churchID;
    }

    /**
     * Set the value related to the column: churchID.
     *
     * @param churchID the churchID value you wish to set
     */
    public void setChurchID(Long ChurchID) {
        this.churchID = ChurchID;
    }

    /**
     * Return the value associated with the column: churchState.
     *
     * @return A String object (this.churchState)
     */
    @Column(length = 50)
    public String getChurchState() {
        return this.churchState;
    }

    /**
     * Set the value related to the column: churchState.
     *
     * @param churchState the churchState value you wish to set
     */
    public void setChurchState(String ChurchState) {
        this.churchState = ChurchState;
    }

    /**
     * Return the value associated with the column: coordinator.
     *
     * @return A String object (this.coordinator)
     */
    @Column(length = 50)
    public String getCoordinator() {
        return this.coordinator;
    }

    /**
     * Set the value related to the column: coordinator.
     *
     * @param coordinator the coordinator value you wish to set
     */
    public void setCoordinator(String Coordinator) {
        this.coordinator = Coordinator;
    }

    /**
     * Return the value associated with the column: dinner1.
     *
     * @return A Integer object (this.dinner1)
     */
    public Integer getDinner1() {

        if (this.dinner1 == null) {
            this.dinner1 = new Integer(0);
        }
        return this.dinner1;
    }

    /**
     * Set the value related to the column: dinner1.
     *
     * @param dinner1 the dinner1 value you wish to set
     */
    public void setDinner1(Integer Dinner1) {
        this.dinner1 = Dinner1;
    }

    /**
     * Return the value associated with the column: dinner2.
     *
     * @return A Integer object (this.dinner2)
     */
    public Integer getDinner2() {

        if (this.dinner2 == null) {
            this.dinner2 = new Integer(0);
        }
        return this.dinner2;
    }

    /**
     * Set the value related to the column: dinner2.
     *
     * @param dinner2 the dinner2 value you wish to set
     */
    public void setDinner2(Integer Dinner2) {
        this.dinner2 = Dinner2;
    }

    /**
     * Return the value associated with the column: dinner3.
     *
     * @return A Integer object (this.dinner3)
     */
    public Integer getDinner3() {

        if (this.dinner3 == null) {
            this.dinner3 = new Integer(0);
        }
        return this.dinner3;
    }

    /**
     * Set the value related to the column: dinner3.
     *
     * @param dinner3 the dinner3 value you wish to set
     */
    public void setDinner3(Integer Dinner3) {
        this.dinner3 = Dinner3;
    }

    /**
     * Return the value associated with the column: dinner4.
     *
     * @return A Integer object (this.dinner4)
     */
    public Integer getDinner4() {

        if (this.dinner4 == null) {
            this.dinner4 = new Integer(0);
        }
        return this.dinner4;
    }

    /**
     * Set the value related to the column: dinner4.
     *
     * @param dinner4 the dinner4 value you wish to set
     */
    public void setDinner4(Integer Dinner4) {
        this.dinner4 = Dinner4;
    }

    /**
     * Return the value associated with the column: dinner5.
     *
     * @return A Integer object (this.dinner5)
     */
    public Integer getDinner5() {

        if (this.dinner5 == null) {
            this.dinner5 = new Integer(0);
        }
        return this.dinner5;
    }

    /**
     * Set the value related to the column: dinner5.
     *
     * @param dinner5 the dinner5 value you wish to set
     */
    public void setDinner5(Integer Dinner5) {
        this.dinner5 = Dinner5;
    }

    /**
     * Return the value associated with the column: formID.
     *
     * @return A Double object (this.formID)
     */
    public Long getFormID() {
        return this.formID;
    }

    /**
     * Set the value related to the column: formID.
     *
     * @param formID the formID value you wish to set
     */
    public void setFormID(Long FormID) {
        this.formID = FormID;
    }

    /**
     * Return the value associated with the column: homeCity.
     *
     * @return A String object (this.homeCity)
     */
    @Column(length = 50)
    public String getHomeCity() {
        return this.homeCity;
    }

    /**
     * Set the value related to the column: homeCity.
     *
     * @param homeCity the homeCity value you wish to set
     */
    public void setHomeCity(String HomeCity) {
        this.homeCity = HomeCity;
    }

    /**
     * Return the value associated with the column: homePhone.
     *
     * @return A String object (this.homePhone)
     */
    @Column(length = 15)
    public String getHomePhone() {
        return this.homePhone;
    }

    /**
     * Set the value related to the column: homePhone.
     *
     * @param homePhone the homePhone value you wish to set
     */
    public void setHomePhone(String HomePhone) {
        this.homePhone = HomePhone;
    }

    /**
     * Return the value associated with the column: homeState.
     *
     * @return A String object (this.homeState)
     */
    @Column(length = 25)
    public String getHomeState() {
        return this.homeState;
    }

    /**
     * Set the value related to the column: homeState.
     *
     * @param homeState the homeState value you wish to set
     */
    public void setHomeState(String HomeState) {
        this.homeState = HomeState;
    }

    /**
     * Return the value associated with the column: homeStreetAddress.
     *
     * @return A String object (this.homeStreetAddress)
     */
    @Column(length = 100)
    public String getHomeStreetAddress() {
        return this.homeStreetAddress;
    }

    /**
     * Set the value related to the column: homeStreetAddress.
     *
     * @param homeStreetAddress the homeStreetAddress value you wish to set
     */
    public void setHomeStreetAddress(String HomeStreetAddress) {
        this.homeStreetAddress = HomeStreetAddress;
    }

    /**
     * Return the value associated with the column: homeZipCode.
     *
     * @return A String object (this.homeZipCode)
     */
    @Column(length = 15)
    public String getHomeZipCode() {
        return this.homeZipCode;
    }

    /**
     * Set the value related to the column: homeZipCode.
     *
     * @param homeZipCode the homeZipCode value you wish to set
     */
    public void setHomeZipCode(String HomeZipCode) {
        this.homeZipCode = HomeZipCode;
    }

    /**
     * Return the value associated with the column: Lodging1.
     *
     * @return A Integer object (this.Lodging1)
     */
    public Boolean getLodging1() {
        return this.Lodging1;
    }

    /**
     * Set the value related to the column: Lodging1.
     *
     * @param Lodging1 the Lodging1 value you wish to set
     */
    public void setLodging1(Boolean Lodging1) {
        this.Lodging1 = Lodging1;
    }

    /**
     * Return the value associated with the column: Lodging2.
     *
     * @return A Integer object (this.Lodging2)
     */
    public Boolean getLodging2() {
        return this.Lodging2;
    }

    /**
     * Set the value related to the column: Lodging2.
     *
     * @param Lodging2 the Lodging2 value you wish to set
     */
    public void setLodging2(Boolean Lodging2) {
        this.Lodging2 = Lodging2;
    }

    /**
     * Return the value associated with the column: Lodging3.
     *
     * @return A Integer object (this.Lodging3)
     */
    public Boolean getLodging3() {
        return this.Lodging3;
    }

    /**
     * Set the value related to the column: Lodging3.
     *
     * @param Lodging3 the Lodging3 value you wish to set
     */
    public void setLodging3(Boolean Lodging3) {
        this.Lodging3 = Lodging3;
    }

    /**
     * Return the value associated with the column: Lodging4.
     *
     * @return A Integer object (this.Lodging4)
     */
    public Boolean getLodging4() {
        return this.Lodging4;
    }

    /**
     * Set the value related to the column: Lodging4.
     *
     * @param Lodging4 the Lodging4 value you wish to set
     */
    public void setLodging4(Boolean Lodging4) {
        this.Lodging4 = Lodging4;
    }

    /**
     * Return the value associated with the column: lunch1.
     *
     * @return A Integer object (this.lunch1)
     */
    public Integer getLunch1() {

        if (this.lunch1 == null) {
            this.lunch1 = new Integer(0);
        }
        return this.lunch1;
    }

    /**
     * Set the value related to the column: lunch1.
     *
     * @param lunch1 the lunch1 value you wish to set
     */
    public void setLunch1(Integer Lunch1) {
        this.lunch1 = Lunch1;
    }

    /**
     * Return the value associated with the column: lunch2.
     *
     * @return A Integer object (this.lunch2)
     */
    public Integer getLunch2() {
        if (this.lunch2 == null) {
            this.lunch2 = new Integer(0);
        }
        return this.lunch2;
    }

    /**
     * Set the value related to the column: lunch2.
     *
     * @param lunch2 the lunch2 value you wish to set
     */
    public void setLunch2(Integer Lunch2) {
        this.lunch2 = Lunch2;
    }

    /**
     * Return the value associated with the column: lunch3.
     *
     * @return A Integer object (this.lunch3)
     */
    public Integer getLunch3() {
        if (this.lunch3 == null) {
            this.lunch3 = new Integer(0);
        }
        return this.lunch3;
    }

    /**
     * Set the value related to the column: lunch3.
     *
     * @param lunch3 the lunch3 value you wish to set
     */
    public void setLunch3(Integer Lunch3) {
        this.lunch3 = Lunch3;
    }

    /**
     * Return the value associated with the column: lunch4.
     *
     * @return A Integer object (this.lunch4)
     */
    public Integer getLunch4() {
        if (this.lunch4 == null) {
            this.lunch4 = new Integer(0);
        }
        return this.lunch4;
    }

    /**
     * Set the value related to the column: lunch4.
     *
     * @param lunch4 the lunch4 value you wish to set
     */
    public void setLunch4(Integer Lunch4) {
        this.lunch4 = Lunch4;
    }

    /**
     * Return the value associated with the column: lunch5.
     *
     * @return A Integer object (this.lunch5)
     */
    public Integer getLunch5() {
        if (this.lunch5 == null) {
            this.lunch5 = new Integer(0);
        }
        return this.lunch5;
    }

    /**
     * Set the value related to the column: lunch5.
     *
     * @param lunch5 the lunch5 value you wish to set
     */
    public void setLunch5(Integer Lunch5) {
        this.lunch5 = Lunch5;
    }

    /**
     * Return the value associated with the column: registrationDate.
     *
     * @return A Date object (this.registrationDate)
     */
    @Temporal(javax.persistence.TemporalType.DATE)
    public Date getRegistrationDate() {
        return this.registrationDate;
    }

    /**
     * Set the value related to the column: registrationDate.
     *
     * @param registrationDate the registrationDate value you wish to set
     */
    public void setRegistrationDate(Date RegistrationDate) {
        this.registrationDate = RegistrationDate;
    }

    /**
     * Deep copy.
     *
     * @return cloned object
     * @throws CloneNotSupportedException on error
     */
    public RegistrationForm clone() throws CloneNotSupportedException {
        super.clone();  // keep hierarchy
        RegistrationForm copy = new RegistrationForm();

        copy.setId(this.getId());

        copy.setAge(this.getAge());
        copy.setChineseName(this.getChineseName());
        copy.setEmail(this.getEmail());
        copy.setFirstName(this.getFirstName());
        copy.setGender(this.getGender());
        copy.setLastName(this.getLastName());
        copy.setRelationship(this.getRelationship());
        copy.setRemarks(this.getRemarks());
        copy.setSeeker(this.getSeeker());
        copy.setStatus(this.getStatus());
        copy.setBreakfast1(this.getBreakfast1());
        copy.setBreakfast2(this.getBreakfast2());
        copy.setBreakfast3(this.getBreakfast3());
        copy.setBreakfast4(this.getBreakfast4());
        copy.setBreakfast5(this.getBreakfast5());
        copy.setChurchCity(this.getChurchCity());
        copy.setChurchID(this.getChurchID());
        copy.setChurchState(this.getChurchState());
        copy.setCoordinator(this.getCoordinator());
        copy.setDinner1(this.getDinner1());
        copy.setDinner2(this.getDinner2());
        copy.setDinner3(this.getDinner3());
        copy.setDinner4(this.getDinner4());
        copy.setDinner5(this.getDinner5());
        copy.setFormID(this.getFormID());
        copy.setHomeCity(this.getHomeCity());
        copy.setHomePhone(this.getHomePhone());
        copy.setHomeState(this.getHomeState());
        copy.setHomeStreetAddress(this.getHomeStreetAddress());
        copy.setHomeZipCode(this.getHomeZipCode());
        copy.setId(this.getId());
        copy.setLodging1(this.getLodging1());
        copy.setLodging2(this.getLodging2());
        copy.setLodging3(this.getLodging3());
        copy.setLodging4(this.getLodging4());
        copy.setLunch1(this.getLunch1());
        copy.setLunch2(this.getLunch2());
        copy.setLunch3(this.getLunch3());
        copy.setLunch4(this.getLunch4());
        copy.setLunch5(this.getLunch5());
        copy.setRegistrationDate(this.getRegistrationDate());
        copy.setRemarks(this.getRemarks());
        copy.setCellPhone(this.getCellPhone());
        return copy;
    }

    /**
     * Provides toString implementation.
     *
     * @see java.lang.Object#toString()
     * @return String representation of this class.
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();

        sb.append("id: " + this.id + ", ");
        sb.append("Age: " + this.age + ", ");
        sb.append("ChineseName: " + this.chineseName + ", ");
        sb.append("Email: " + this.email + ", ");
        sb.append("FirstName: " + this.firstName + ", ");
        sb.append("Gender: " + this.gender + ", ");
        sb.append("LastName: " + this.lastName + ", ");
        sb.append("Relationship: " + this.relationship + ", ");
        sb.append("Remarks: " + this.Remarks + ", ");
        sb.append("Seeker: " + this.seeker + ", ");
        sb.append("Status: " + this.status);
        sb.append("Language: " + this.getLanguage());
        sb.append("Faith: " + this.getFaith());
        sb.append("FaithYear: " + this.getFaithYear());
        sb.append("Breakfast1: " + this.breakfast1 + ", ");
        sb.append("Breakfast2: " + this.breakfast2 + ", ");
        sb.append("Breakfast3: " + this.breakfast3 + ", ");
        sb.append("Breakfast4: " + this.breakfast4 + ", ");
        sb.append("Breakfast5: " + this.breakfast5 + ", ");
        sb.append("ChurchCity: " + this.churchCity + ", ");
        sb.append("ChurchID: " + this.churchID + ", ");
        sb.append("ChurchState: " + this.churchState + ", ");
        sb.append("Coordinator: " + this.coordinator + ", ");
        sb.append("Dinner1: " + this.dinner1 + ", ");
        sb.append("Dinner2: " + this.dinner2 + ", ");
        sb.append("Dinner3: " + this.dinner3 + ", ");
        sb.append("Dinner4: " + this.dinner4 + ", ");
        sb.append("Dinner5: " + this.dinner5 + ", ");
        sb.append("FormID: " + this.formID + ", ");
        sb.append("HomeCity: " + this.homeCity + ", ");
        sb.append("HomePhone: " + this.homePhone + ", ");
        sb.append("HomeState: " + this.homeState + ", ");
        sb.append("HomeStreetAddress: " + this.homeStreetAddress + ", ");
        sb.append("HomeZipCode: " + this.homeZipCode + ", ");
        sb.append("id: " + this.id + ", ");
        sb.append("Lodging1: " + this.Lodging1 + ", ");
        sb.append("Lodging2: " + this.Lodging2 + ", ");
        sb.append("Lodging3: " + this.Lodging3 + ", ");
        sb.append("Lodging4: " + this.Lodging4 + ", ");
        sb.append("Lunch1: " + this.lunch1 + ", ");
        sb.append("Lunch2: " + this.lunch2 + ", ");
        sb.append("Lunch3: " + this.lunch3 + ", ");
        sb.append("Lunch4: " + this.lunch4 + ", ");
        sb.append("Lunch5: " + this.lunch5 + ", ");
        sb.append("RegistrationDate: " + this.registrationDate + ", ");
        sb.append("Remarks: " + this.Remarks + ", ");
        sb.append("CellPhone:" + this.cellPhone);
        return sb.toString();
    }

    /**
     * Equals implementation.
     *
     * @see java.lang.Object#equals(java.lang.Object)
     * @param aThat Object to compare with
     * @return true/false
     */
    @Override
    public boolean equals(Object aThat) {
        if (this == aThat) {
            return true;
        }
        if ((aThat == null) || (!(aThat instanceof RegistrationForm))) {
            return false;
        }
        RegistrationForm that = (RegistrationForm) aThat;

        return (((this.age == null) && (that.age == null)) || (this.age != null && this.age.equals(that.age)))
                && (((this.chineseName == null) && (that.chineseName == null)) || (this.chineseName != null && this.chineseName.equals(that.chineseName)))
                && (((this.email == null) && (that.email == null)) || (this.email != null && this.email.equals(that.email)))
                && (((this.firstName == null) && (that.firstName == null)) || (this.firstName != null && this.firstName.equals(that.firstName)))
                && (((this.gender == null) && (that.gender == null)) || (this.gender != null && this.gender.equals(that.gender)))
                && (((this.id == null) && (that.id == null)) || (this.id != null && this.id.equals(that.id)))
                && (((this.lastName == null) && (that.lastName == null)) || (this.lastName != null && this.lastName.equals(that.lastName)))
                && (((this.relationship == null) && (that.relationship == null)) || (this.relationship != null && this.relationship.equals(that.relationship)))
                && (((this.Remarks == null) && (that.Remarks == null)) || (this.Remarks != null && this.Remarks.equals(that.Remarks)))
                && (((this.seeker == null) && (that.seeker == null)) || (this.seeker != null && this.seeker.equals(that.seeker)))
                && (((this.getLanguage() == null) && (that.getLanguage() == null)) || (this.getLanguage() != null && this.getLanguage().equals(that.getLanguage())))
                && (((this.getFaith() == null) && (that.getFaith() == null)) || (this.getFaith() != null && this.getFaith().equals(that.getFaith())))
                && (((this.getFaithYear() == null) && (that.getFaithYear() == null)) || (this.getFaithYear() != null && this.getFaithYear().equals(that.getFaithYear())))
                && (((this.status == null) && (that.status == null)) || (this.status != null && this.status.equals(that.status))
                && (((this.breakfast1 == null) && (that.breakfast1 == null)) || (this.breakfast1 != null && this.breakfast1.equals(that.breakfast1)))
                && (((this.breakfast2 == null) && (that.breakfast2 == null)) || (this.breakfast2 != null && this.breakfast2.equals(that.breakfast2)))
                && (((this.breakfast3 == null) && (that.breakfast3 == null)) || (this.breakfast3 != null && this.breakfast3.equals(that.breakfast3)))
                && (((this.breakfast4 == null) && (that.breakfast4 == null)) || (this.breakfast4 != null && this.breakfast4.equals(that.breakfast4)))
                && (((this.breakfast5 == null) && (that.breakfast5 == null)) || (this.breakfast5 != null && this.breakfast5.equals(that.breakfast5)))
                && (((this.churchCity == null) && (that.churchCity == null)) || (this.churchCity != null && this.churchCity.equals(that.churchCity)))
                && (((this.churchID == null) && (that.churchID == null)) || (this.churchID != null && this.churchID.equals(that.churchID)))
                && (((this.churchState == null) && (that.churchState == null)) || (this.churchState != null && this.churchState.equals(that.churchState)))
                && (((this.coordinator == null) && (that.coordinator == null)) || (this.coordinator != null && this.coordinator.equals(that.coordinator)))
                && (((this.dinner1 == null) && (that.dinner1 == null)) || (this.dinner1 != null && this.dinner1.equals(that.dinner1)))
                && (((this.dinner2 == null) && (that.dinner2 == null)) || (this.dinner2 != null && this.dinner2.equals(that.dinner2)))
                && (((this.dinner3 == null) && (that.dinner3 == null)) || (this.dinner3 != null && this.dinner3.equals(that.dinner3)))
                && (((this.dinner4 == null) && (that.dinner4 == null)) || (this.dinner4 != null && this.dinner4.equals(that.dinner4)))
                && (((this.dinner5 == null) && (that.dinner5 == null)) || (this.dinner5 != null && this.dinner5.equals(that.dinner5)))
                && (((this.formID == null) && (that.formID == null)) || (this.formID != null && this.formID.equals(that.formID)))
                && (((this.homeCity == null) && (that.homeCity == null)) || (this.homeCity != null && this.homeCity.equals(that.homeCity)))
                && (((this.homePhone == null) && (that.homePhone == null)) || (this.homePhone != null && this.homePhone.equals(that.homePhone)))
                && (((this.homeState == null) && (that.homeState == null)) || (this.homeState != null && this.homeState.equals(that.homeState)))
                && (((this.homeStreetAddress == null) && (that.homeStreetAddress == null)) || (this.homeStreetAddress != null && this.homeStreetAddress.equals(that.homeStreetAddress)))
                && (((this.homeZipCode == null) && (that.homeZipCode == null)) || (this.homeZipCode != null && this.homeZipCode.equals(that.homeZipCode)))
                && (((this.id == null) && (that.id == null)) || (this.id != null && this.id.equals(that.id)))
                && (((this.Lodging1 == null) && (that.Lodging1 == null)) || (this.Lodging1 != null && this.Lodging1.equals(that.Lodging1)))
                && (((this.Lodging2 == null) && (that.Lodging2 == null)) || (this.Lodging2 != null && this.Lodging2.equals(that.Lodging2)))
                && (((this.Lodging3 == null) && (that.Lodging3 == null)) || (this.Lodging3 != null && this.Lodging3.equals(that.Lodging3)))
                && (((this.Lodging4 == null) && (that.Lodging4 == null)) || (this.Lodging4 != null && this.Lodging4.equals(that.Lodging4)))
                && (((this.lunch1 == null) && (that.lunch1 == null)) || (this.lunch1 != null && this.lunch1.equals(that.lunch1)))
                && (((this.lunch2 == null) && (that.lunch2 == null)) || (this.lunch2 != null && this.lunch2.equals(that.lunch2)))
                && (((this.lunch3 == null) && (that.lunch3 == null)) || (this.lunch3 != null && this.lunch3.equals(that.lunch3)))
                && (((this.lunch4 == null) && (that.lunch4 == null)) || (this.lunch4 != null && this.lunch4.equals(that.lunch4)))
                && (((this.lunch5 == null) && (that.lunch5 == null)) || (this.lunch5 != null && this.lunch5.equals(that.lunch5)))
                && (((this.registrationDate == null) && (that.registrationDate == null)) || (this.registrationDate != null && this.registrationDate.equals(that.registrationDate)))
                && (((this.Remarks == null) && (that.Remarks == null)) || (this.Remarks != null && this.Remarks.equals(that.Remarks))));
    }

    /**
     * Calculate the hashcode.
     *
     * @see java.lang.Object#hashCode()
     * @return a calculated number
     */
    public int hashCode() {
        int result = 0;
        result
                = 1000003 * result + (this.age == null ? 0 : this.age.hashCode());
        result
                = 1000003 * result + (this.chineseName == null ? 0 : this.chineseName.hashCode());
        result
                = 1000003 * result + (this.email == null ? 0 : this.email.hashCode());
        result
                = 1000003 * result + (this.firstName == null ? 0 : this.firstName.hashCode());
        result
                = 1000003 * result + (this.gender == null ? 0 : this.gender.hashCode());
        result
                = 1000003 * result + (this.id == null ? 0 : this.id.hashCode());
        result
                = 1000003 * result + (this.lastName == null ? 0 : this.lastName.hashCode());
        result
                = 1000003 * result + (this.relationship == null ? 0 : this.relationship.hashCode());
        result
                = 1000003 * result + (this.Remarks == null ? 0 : this.Remarks.hashCode());
        result
                = 1000003 * result + (this.seeker == null ? 0 : this.seeker.hashCode());
        result
                = 1000003 * result + (this.status == null ? 0 : this.status.hashCode());

        result = 1000003 * result + (this.breakfast1 == null ? 0 : this.breakfast1.hashCode());
        result = 1000003 * result + (this.breakfast2 == null ? 0 : this.breakfast2.hashCode());
        result = 1000003 * result + (this.breakfast3 == null ? 0 : this.breakfast3.hashCode());
        result = 1000003 * result + (this.breakfast4 == null ? 0 : this.breakfast4.hashCode());
        result = 1000003 * result + (this.breakfast5 == null ? 0 : this.breakfast5.hashCode());
        result = 1000003 * result + (this.churchCity == null ? 0 : this.churchCity.hashCode());
        result = 1000003 * result + (this.churchID == null ? 0 : this.churchID.hashCode());
        result = 1000003 * result + (this.churchState == null ? 0 : this.churchState.hashCode());
        result = 1000003 * result + (this.coordinator == null ? 0 : this.coordinator.hashCode());
        result = 1000003 * result + (this.dinner1 == null ? 0 : this.dinner1.hashCode());
        result = 1000003 * result + (this.dinner2 == null ? 0 : this.dinner2.hashCode());
        result = 1000003 * result + (this.dinner3 == null ? 0 : this.dinner3.hashCode());
        result = 1000003 * result + (this.dinner4 == null ? 0 : this.dinner4.hashCode());
        result = 1000003 * result + (this.dinner5 == null ? 0 : this.dinner5.hashCode());
        result = 1000003 * result + (this.formID == null ? 0 : this.formID.hashCode());
        result = 1000003 * result + (this.homeCity == null ? 0 : this.homeCity.hashCode());
        result = 1000003 * result + (this.homePhone == null ? 0 : this.homePhone.hashCode());
        result = 1000003 * result + (this.homeState == null ? 0 : this.homeState.hashCode());
        result = 1000003 * result + (this.homeStreetAddress == null ? 0 : this.homeStreetAddress.hashCode());
        result = 1000003 * result + (this.homeZipCode == null ? 0 : this.homeZipCode.hashCode());
        result = 1000003 * result + (this.id == null ? 0 : this.id.hashCode());
        result = 1000003 * result + (this.Lodging1 == null ? 0 : this.Lodging1.hashCode());
        result = 1000003 * result + (this.Lodging2 == null ? 0 : this.Lodging2.hashCode());
        result = 1000003 * result + (this.Lodging3 == null ? 0 : this.Lodging3.hashCode());
        result = 1000003 * result + (this.Lodging4 == null ? 0 : this.Lodging4.hashCode());
        result = 1000003 * result + (this.lunch1 == null ? 0 : this.lunch1.hashCode());
        result = 1000003 * result + (this.lunch2 == null ? 0 : this.lunch2.hashCode());
        result = 1000003 * result + (this.lunch3 == null ? 0 : this.lunch3.hashCode());
        result = 1000003 * result + (this.lunch4 == null ? 0 : this.lunch4.hashCode());
        result = 1000003 * result + (this.lunch5 == null ? 0 : this.lunch5.hashCode());
        result = 1000003 * result + (this.registrationDate == null ? 0 : this.registrationDate.hashCode());
        result = 1000003 * result + (this.Remarks == null ? 0 : this.Remarks.hashCode());

        return result;
    }

    public String getLanguage() {
        return language;
    }

    public void setLanguage(String Language) {
        this.language = Language;
    }

    public Faith getFaith() {
        return faith;
    }

    public void setFaith(Faith faith) {
        this.faith = faith;
    }

    public Integer getFaithYear() {
        return faithYear;
    }

    public void setFaithYear(Integer FaithYear) {
        this.faithYear = FaithYear;
    }

    public String getChurchName() {
        return churchName;
    }

    public void setChurchName(String ChurchName) {
        this.churchName = ChurchName;
    }

    public Boolean getMisc1() {
        return Misc1;
    }

    public void setMisc1(Boolean Misc1) {
        this.Misc1 = Misc1;
    }

    public Boolean getMisc2() {
        return Misc2;
    }

    public void setMisc2(Boolean Misc2) {
        this.Misc2 = Misc2;
    }

    /**
     * @return the NameTag
     */
    @Column(columnDefinition = "TINYINT(1)")
    public Boolean getNameTag() {
        return NameTag;
    }

    /**
     * @param NameTag the NameTag to set
     */
    public void setNameTag(Boolean NameTag) {
        this.NameTag = NameTag;
    }

    /**
     * @return the group
     */
    @Column(length = 5)
    public String getGroupName() {
        return GroupName;
    }

    /**
     * @param group the group to set
     */
    public void setGroupName(String groupName) {
        this.GroupName = groupName;
    }

    /**
     * @return the CheckIn
     */
    public Boolean getCheckIn() {
        return CheckIn;
    }

    /**
     * @param CheckIn the CheckIn to set
     */
    public void setCheckIn(Boolean CheckIn) {
        this.CheckIn = CheckIn;
    }

//    /**
//     * @return the registrants
//     */
//    public List getRegistrants() {
//        return registrants;
//    }
//
//    /**
//     * @param registrants the registrants to set
//     */
//    public void setRegistrants(List registrants) {
//        this.registrants = registrants;
//    }
    /**
     * @return the volunteerJobs
     */
    public Set<Serve> getVolunteerJobs() {
        return volunteerJobs;
    }

    /**
     * @param volunteerJobs the volunteerJobs to set
     */
    public void setVolunteerJobs(Set<Serve> volunteerJobs) {
        this.volunteerJobs = volunteerJobs;
    }

    /**
     * @return the paymentMethod
     */
    public PaymentMethod getPaymentMethod() {
        return paymentMethod;
    }

    /**
     * @param paymentMethod the paymentMethod to set
     */
    public void setPaymentMethod(PaymentMethod paymentMethod) {
        this.paymentMethod = paymentMethod;
    }

    /**
     * @return the subsidyAmount
     */
    public String getSubsidyAmount() {
        return subsidyAmount;
    }

    /**
     * @param subsidyAmount the subsidyAmount to set
     */
    public void setSubsidyAmount(String subsidyAmount) {
        this.subsidyAmount = subsidyAmount;
    }

    /**
     * @return the subsidyAmount
     */
    public String getPayAmount() {
        return payAmount;
    }

    /**
     * @param subsidyAmount the subsidyAmount to set
     */
    public void setPayAmount(String payAmount) {
        this.payAmount = payAmount;
    }

    /**
     * @return the breakfastTotal
     */
    public Integer getBreakfastTotal() {
        return breakfastTotal;
    }

    /**
     * @param breakfastTotal the breakfastTotal to set
     */
    public void setBreakfastTotal(Integer breakfastTotal) {
        this.breakfastTotal = breakfastTotal;
    }

    /**
     * @return the lunchTotal
     */
    public Integer getLunchTotal() {
        return lunchTotal;
    }

    /**
     * @param lunchTotal the lunchTotal to set
     */
    public void setLunchTotal(Integer lunchTotal) {
        this.lunchTotal = lunchTotal;
    }

    /**
     * @return the dinnerTotal
     */
    public Integer getDinnerTotal() {
        return dinnerTotal;
    }

    /**
     * @param dinnerTotal the dinnerTotal to set
     */
    public void setDinnerTotal(Integer dinnerTotal) {
        this.dinnerTotal = dinnerTotal;
    }

    /**
     * @return the adultTotal
     */
    public Integer getAdultTotal() {
        return adultTotal;
    }

    /**
     * @param adultTotal the adultTotal to set
     */
    public void setAdultTotal(Integer adultTotal) {
        this.adultTotal = adultTotal;
    }

    /**
     * @return the childrenTotal
     */
    public Integer getChildrenTotal() {
        return childrenTotal;
    }

    /**
     * @param childrenTotal the childrenTotal to set
     */
    public void setChildrenTotal(Integer childrenTotal) {
        this.childrenTotal = childrenTotal;
    }

    /**
     * @return the totalRegistrationFee
     */
    public Integer getTotalRegistrationFee() {
        return totalRegistrationFee;
    }

    /**
     * @param totalRegistrationFee the totalRegistrationFee to set
     */
    public void setTotalRegistrationFee(Integer totalRegistrationFee) {
        this.totalRegistrationFee = totalRegistrationFee;
    }

    /**
     * @return the totalMealsFee
     */
    public Integer getTotalMealsFee() {
        return totalMealsFee;
    }

    /**
     * @param totalMealsFee the totalMealsFee to set
     */
    public void setTotalMealsFee(Integer totalMealsFee) {
        this.totalMealsFee = totalMealsFee;
    }

    /**
     * @return the totalAdultRegistrationFee
     */
    public Integer getTotalAdultRegistrationFee() {
        return totalAdultRegistrationFee;
    }

    /**
     * @param totalAdultRegistrationFee the totalAdultRegistrationFee to set
     */
    public void setTotalAdultRegistrationFee(Integer totalAdultRegistrationFee) {
        this.totalAdultRegistrationFee = totalAdultRegistrationFee;
    }

    /**
     * @return the totalChildrenRegistrationFee
     */
    public Integer getTotalChildrenRegistrationFee() {
        return totalChildrenRegistrationFee;
    }

    /**
     * @param totalChildrenRegistrationFee the totalChildrenRegistrationFee to
     * set
     */
    public void setTotalChildrenRegistrationFee(Integer totalChildrenRegistrationFee) {
        this.totalChildrenRegistrationFee = totalChildrenRegistrationFee;
    }

    /**
     * @return the totalBreakfastFee
     */
    public Integer getTotalBreakfastFee() {
        return totalBreakfastFee;
    }

    /**
     * @param totalBreakfastFee the totalBreakfastFee to set
     */
    public void setTotalBreakfastFee(Integer totalBreakfastFee) {
        this.totalBreakfastFee = totalBreakfastFee;
    }

    /**
     * @return the totalLunchFee
     */
    public Integer getTotalLunchFee() {
        return totalLunchFee;
    }

    /**
     * @param totalLunchFee the totalLunchFee to set
     */
    public void setTotalLunchFee(Integer totalLunchFee) {
        this.totalLunchFee = totalLunchFee;
    }

    /**
     * @return the totalDinnerFee
     */
    public Integer getTotalDinnerFee() {
        return totalDinnerFee;
    }

    /**
     * @param totalDinnerFee the totalDinnerFee to set
     */
    public void setTotalDinnerFee(Integer totalDinnerFee) {
        this.totalDinnerFee = totalDinnerFee;
    }

    /**
     * @return the grandTotal
     */
    public Integer getGrandTotal() {
        return grandTotal;
    }

    /**
     * @param grandTotal the grandTotal to set
     */
    public void setGrandTotal(Integer grandTotal) {
        this.grandTotal = grandTotal;
    }

    /**
     * @return the babyTotal
     */
    public Integer getBabyTotal() {
        return babyTotal;
    }

    /**
     * @param babyTotal the babyTotal to set
     */
    public void setBabyTotal(Integer babyTotal) {
        this.babyTotal = babyTotal;
    }

    /**
     * @return the ageGroup
     */
    public List<LabelValue> getAgeGroup() {
        return ageGroup;
    }

    /**
     * @param ageGroup the ageGroup to set
     */
    public void setAgeGroup(List<LabelValue> ageGroup) {
        this.ageGroup = ageGroup;
    }

    /**
     * @return the adultRegistrationFee
     */
    public Integer getAdultRegistrationFee() {
        return adultRegistrationFee;
    }

    /**
     * @param adultRegistrationFee the adultRegistrationFee to set
     */
    public void setAdultRegistrationFee(Integer adultRegistrationFee) {
        this.adultRegistrationFee = adultRegistrationFee;
    }

    /**
     * @return the nonAdultRegistrationFee
     */
    public Integer getNonAdultRegistrationFee() {
        return nonAdultRegistrationFee;
    }

    /**
     * @param nonAdultRegistrationFee the nonAdultRegistrationFee to set
     */
    public void setNonAdultRegistrationFee(Integer nonAdultRegistrationFee) {
        this.nonAdultRegistrationFee = nonAdultRegistrationFee;
    }

    /**
     * @return the discountCode
     */
    public String getDiscountCode() {
        return discountCode;
    }

    /**
     * @param discountCode the discountCode to set
     */
    public void setDiscountCode(String discountCode) {
        this.discountCode = discountCode;
    }

    /**
     * @return the totalLodging1Fee
     */
    public Integer getTotalLodging1Fee() {
        return totalLodging1Fee;
    }

    /**
     * @param totalLodging1Fee the totalLodging1Fee to set
     */
    public void setTotalLodging1Fee(Integer totalLodging1Fee) {
        this.totalLodging1Fee = totalLodging1Fee;
    }

    /**
     * @return the totalLodging2Fee
     */
    public Integer getTotalLodging2Fee() {
        return totalLodging2Fee;
    }

    /**
     * @param totalLodging2Fee the totalLodging2Fee to set
     */
    public void setTotalLodging2Fee(Integer totalLodging2Fee) {
        this.totalLodging2Fee = totalLodging2Fee;
    }

    /**
     * @return the totalLodgingFee
     */
    public Integer getTotalLodgingFee() {
        return totalLodgingFee;
    }

    /**
     * @param totalLodgingFee the totalLodgingFee to set
     */
    public void setTotalLodgingFee(Integer totalLodgingFee) {
        this.totalLodgingFee = totalLodgingFee;
    }

    /**
     * @return the totalMeal1Fee
     */
    public Integer getTotalMeal1Fee() {
        return totalMeal1Fee;
    }

    /**
     * @param totalMeal1Fee the totalMeal1Fee to set
     */
    public void setTotalMeal1Fee(Integer totalMeal1Fee) {
        this.totalMeal1Fee = totalMeal1Fee;
    }

    /**
     * @return the totalMeal2Fee
     */
    public Integer getTotalMeal2Fee() {
        return totalMeal2Fee;
    }

    /**
     * @param totalMeal2Fee the totalMeal2Fee to set
     */
    public void setTotalMeal2Fee(Integer totalMeal2Fee) {
        this.totalMeal2Fee = totalMeal2Fee;
    }

    /**
     * @return the totalMeal3Fee
     */
    public Integer getTotalMeal3Fee() {
        return totalMeal3Fee;
    }

    /**
     * @param totalMeal3Fee the totalMeal3Fee to set
     */
    public void setTotalMeal3Fee(Integer totalMeal3Fee) {
        this.totalMeal3Fee = totalMeal3Fee;
    }

    /**
     * @return the totalMeal4Fee
     */
    public Integer getTotalMeal4Fee() {
        return totalMeal4Fee;
    }

    /**
     * @param totalMeal4Fee the totalMeal4Fee to set
     */
    public void setTotalMeal4Fee(Integer totalMeal4Fee) {
        this.totalMeal4Fee = totalMeal4Fee;
    }

    /**
     * @return the eventID
     */
    public Integer getEventID() {
        return eventID;
    }

    /**
     * @param eventID the eventID to set
     */
    public void setEventID(Integer eventID) {
        this.eventID = eventID;
    }

    /**
     * @return the birthDayOfMonth
     */
    public String getBirthDayOfMonth() {
        return birthDayOfMonth;
    }

    /**
     * @param birthDayOfMonth the birthDayOfMonth to set
     */
    public void setBirthDayOfMonth(String birthDayOfMonth) {
        this.birthDayOfMonth = birthDayOfMonth;
    }

    /**
     * @return the birthMonth
     */
    public String getBirthMonth() {
        return birthMonth;
    }

    /**
     * @param birthMonth the birthMonth to set
     */
    public void setBirthMonth(String birthMonth) {
        this.birthMonth = birthMonth;
    }

    /**
     * @return the months
     */
    public List<LabelValue> getMonths() {
        return months;
    }

    /**
     * @param months the months to set
     */
    public void setMonths(List<LabelValue> months) {
        this.months = months;
    }

    /**
     * @return the dayOfMonth
     */
    public List<LabelValue> getDayOfMonth() {
        return dayOfMonth;
    }

    /**
     * @param dayOfMonth the dayOfMonth to set
     */
    public void setDayOfMonth(List<LabelValue> dayOfMonth) {
        this.dayOfMonth = dayOfMonth;
    }

    /**
     * @return the months
     */
    public List<LabelValue> getRelationshipGroup() {
        return relationshipGroup;
    }

    public void setRelationshipGroup(List<LabelValue> relationshipGroup) {
        this.relationshipGroup = relationshipGroup;
    }

    /**
     * @return the statusGroup
     */
    public List<LabelValue> getStatusGroup() {
        return statusGroup;
    }

    /**
     * @param statusGroup the statusGroup to set
     */
    public void setStatusGroup(List<LabelValue> statusGroup) {
        this.statusGroup = statusGroup;
    }

    /**
     * @return the statusGroup2
     */
    public List<LabelValue> getStatusGroup2() {
        return statusGroup2;
    }

    /**
     * @param statusGroup2 the statusGroup2 to set
     */
    public void setStatusGroup2(List<LabelValue> statusGroup2) {
        this.statusGroup2 = statusGroup2;
    }

    /**
     * @return the statesList
     */
    public List<LabelValue> getStateList() {
        return stateList;
    }

    /**
     * @param stateList
     */
    public void setStateList(List<LabelValue> stateList) {
        this.stateList = stateList;
    }

    /**
     * @return the emailConfirm
     */
    public String getEmailConfirm() {
        return emailConfirm;
    }

    /**
     * @param emailConfirm the emailConfirm to set
     */
    public void setEmailConfirm(String emailConfirm) {
        this.emailConfirm = emailConfirm;
    }

    /**
     * @return the homeCountry
     */
    public String getHomeCountry() {
        return homeCountry;
    }

    /**
     * @param homeCountry the homeCountry to set
     */
    public void setHomeCountry(String homeCountry) {
        this.homeCountry = homeCountry;
    }

    /**
     * @return the address
     */
    public Family getAddress() {
        return address;
    }

    /**
     * @param address the address to set
     */
    public void setAddress(Family address) {
        this.address = address;
    }

    /**
     * @return the registrants
     */
    public List<Person> getRegistrants() {
        return registrants;
    }

    /**
     * @param registrants the registrants to set
     */
    public void setRegistrants(ArrayList<Person> registrants) {
        this.registrants = registrants;
    }

}
